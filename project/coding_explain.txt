1. 게임 디자인
- 텍스트만으로 이뤄지는 게임
- 연애 시뮬레이션을 텍스트 만으로 꾸미되, 중학생이라는 설정에 맞게
다양한 재미있는 대사를 준비하여 텍스트 게임의 지루함을 넘어보고 싶었다.
- 주인공이 3명의 여성과 연애를 시도하고, 각각의 여성과의 대화를  통해
성공과 실패가 결정됨.
- 게임이 끝나면 3명의 여성과의 연애 성공/실패 여부에 따라
8개의 최종 엔딩을 만듬.

2. 필요데이터 준비
- 게임 특성상 다량의 대사가 필요하기 때문에, 팀원들 중 스토리 팀에서
대사를 정리.
- 정리된 대사는 모듈로 활용하기 위해, 별도의 py파일로 만들어둠.

3. 코딩 구조 정하기
- 미리 정리해 둔 게임 내 대사가 담긴 텍스트 정리파일을 모듈로 불러들임.
- 게임 내에서 필요한 변수와 함수 등을 미리 정의해 둠.
- 본 게임이 시작되면 3명의 대상과 연애를 선택해 할 수 있게 반복문 설정.

4. 변수 및 함수 정의
- 코드 중 가장 많은 양을 차지하는 텍스트 데이터는 양식을 정해 리스트 데이터로 만듬.
- 정해진 텍스트 데이터 리스트를 순서대로 불러와 대화선택지를 보여주고,
선택을 완료하면 대화의 결과와 함께, 해당 선택의 점수를 저장할 수 있도록 함수 정의.
- 대화 함수는 텍스트 데이터의 리스트를 순서대로 불러와 화면에 출력해주는 역할과
점수를 합산하고 결과를 보여주는 역할을 함.
- 각 연애대상과 대화를 마치면, 성공인지 실패인지를 기록해 두는 변수를 인물별로 만들어
최종 8가지 경우의 수 엔딩에 사용하도록 정의

5. 메인 프로그램 작성
- 위에서 정의한 대화 함수를 이용해 3명의 연애대상 선택지에서 고른 내용에 따라
자동으로 텍스트 데이터를 불러와 질문을 이어가도록 반복문 작성
- 3명 모두 강제적으로 선택해 연애를 시작하지 않고, 중간에 그만둘수있는 선택지를 둠.
- 텍스트 게임의 특성상, 이전에 보여졌던 텍스트 내용이  명령 프롬프트에 계속 남아서
시스템 명령어를 통해 화면을 청소해주는 기능을 넣어 지금 보이는 대사에만 집중할 수 있도록
코딩함.

6. 게임 엔딩 정리
- 기본값으로 3명의 연애대상과 모두 실패하도록 하고, 성공했을 경우를 따져 8개의 엔딩을
볼 수 있도록 8개의 조건문으로 나누어 코딩.




------------------------------------------------------------------

6. 게임 엔딩 정리
- 기본값으로 3명의 연애대상과 모두 실패하도록 하고, 성공했을 경우를 따져 8개의 엔딩을
볼 수 있도록 8개의 조건문으로 나누어 코딩.



남극비버팀의 연애시뮬레이션 게임에 대해 설명드리겠습니다.

먼저 게임을 제작하고 코딩하게 된 과정을 설명하고,
직접 게임을 플레이하며 게임내용에 대해 설명하겠습니다.

첫번째로 게임 디자인에 대해 설명하겠습니다.
일단 저희 게임 장르는 연애 시뮬레이션 입니다.
연애 시뮬레이션을 텍스트 만으로 꾸몄지만 주인공이 중학생이란 설정에 맞게
텍스트 만으로 중학생들이 공감하고 재밌어할만한 대사들은 썼습니다.
주인공은 후배, 동갑, 선배와 대화를 통해 성공/실패 여부에 따라 각각 8개의 엔딩을 만들었습니다.

다음은 두번째로 필요데이터를 준비한 과정에 대해 설명해드리겠습니다.
게임이 텍스트게임에 연애시뮬레이션이다보니 많은 대사가 필요하여,
팀원들 중 스토리 팀에서 대사를 정리하였습니다.
정리된 대사는 모듈로 활용하기 위해, py파일을 만들어 사용하였습니다.

세 번째로 코드 구조에 대해 설명드리겠습니다.
미리 정리한 게임 내 대사 텍스트 파일을 모듈로 불러들였고,
게임 내에서 필요한 변수, 함수 등을 미리 정의해뒀습니다.
게임이 시작되면 3명의 대상과 연애를 선택해 할 수 있게 반복문을 설정했고,
중간에 포기를 할수있는 선택지도 넣었습니다.

네번째로 설명드릴 내용은 변수, 함수 정의입니다.
코드 중 가장 많은 양을 차지하는 텍스트 데이터는 약식을 정해 리스트 데이터로 만들었고,
텍스트 데이터의 리스트를 불러와 선택지를 보여주고,
선택을 완료하면대화릐 결과와 함꼐 해당 선택의 점수를 저장할 수 있도록 함수를 정의했습니다.
각 대상과 대화를 마치면, 성공인지 실패인지를 기록해 두는 변수를 인물별로 만들어
8가지의 경우의 수 엔딩에 사용하도록 정의했습니다.

다섯번째로 메인 프로그램 작성에 대해 설명드리겠습니다.
위에서 정의한 대화 함수를 이용해 3명의 연애대상 선택지에서 고른 내용에 따라
자동으로 텍스트 데이터를 불러와 질문을 이어가도록 반복문을 작성했다.
텍스트 게임의 특성상 이전에 보여졌던 텍스트 내용이  명령 프롬프트에 계속 남아서
시스템 명령어를 통해 화면을 청소해주는 기능을 넣어 지금 보이는 대사에만 집중할 수 있도록
코딩했습니다.

마지막으로 게임 엔딩 정리입니다.
기본값으로 3명의 연애대상과 모두 성공 또는 실패했을 경우를 따져 8개의 엔딩을
볼 수 있도록 8개의 조건문으로 나누어 코딩했습니다.

이상으로 코드설명을 마치고, 게임을 직접 구동하며 게임 내용을 설명드리겠습니다.





